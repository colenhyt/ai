package box.site.model;

import java.util.ArrayList;
import java.util.List;

public class WordrelationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wordrelation
     *
     * @mbggenerated Fri Apr 15 13:54:12 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wordrelation
     *
     * @mbggenerated Fri Apr 15 13:54:12 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wordrelation
     *
     * @mbggenerated Fri Apr 15 13:54:12 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordrelation
     *
     * @mbggenerated Fri Apr 15 13:54:12 CST 2016
     */
    public WordrelationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordrelation
     *
     * @mbggenerated Fri Apr 15 13:54:12 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordrelation
     *
     * @mbggenerated Fri Apr 15 13:54:12 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordrelation
     *
     * @mbggenerated Fri Apr 15 13:54:12 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordrelation
     *
     * @mbggenerated Fri Apr 15 13:54:12 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordrelation
     *
     * @mbggenerated Fri Apr 15 13:54:12 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordrelation
     *
     * @mbggenerated Fri Apr 15 13:54:12 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordrelation
     *
     * @mbggenerated Fri Apr 15 13:54:12 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordrelation
     *
     * @mbggenerated Fri Apr 15 13:54:12 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordrelation
     *
     * @mbggenerated Fri Apr 15 13:54:12 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wordrelation
     *
     * @mbggenerated Fri Apr 15 13:54:12 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wordrelation
     *
     * @mbggenerated Fri Apr 15 13:54:12 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andAutoidIsNull() {
            addCriterion("autoid is null");
            return (Criteria) this;
        }

        public Criteria andAutoidIsNotNull() {
            addCriterion("autoid is not null");
            return (Criteria) this;
        }

        public Criteria andAutoidEqualTo(Integer value) {
            addCriterion("autoid =", value, "autoid");
            return (Criteria) this;
        }

        public Criteria andAutoidNotEqualTo(Integer value) {
            addCriterion("autoid <>", value, "autoid");
            return (Criteria) this;
        }

        public Criteria andAutoidGreaterThan(Integer value) {
            addCriterion("autoid >", value, "autoid");
            return (Criteria) this;
        }

        public Criteria andAutoidGreaterThanOrEqualTo(Integer value) {
            addCriterion("autoid >=", value, "autoid");
            return (Criteria) this;
        }

        public Criteria andAutoidLessThan(Integer value) {
            addCriterion("autoid <", value, "autoid");
            return (Criteria) this;
        }

        public Criteria andAutoidLessThanOrEqualTo(Integer value) {
            addCriterion("autoid <=", value, "autoid");
            return (Criteria) this;
        }

        public Criteria andAutoidIn(List<Integer> values) {
            addCriterion("autoid in", values, "autoid");
            return (Criteria) this;
        }

        public Criteria andAutoidNotIn(List<Integer> values) {
            addCriterion("autoid not in", values, "autoid");
            return (Criteria) this;
        }

        public Criteria andAutoidBetween(Integer value1, Integer value2) {
            addCriterion("autoid between", value1, value2, "autoid");
            return (Criteria) this;
        }

        public Criteria andAutoidNotBetween(Integer value1, Integer value2) {
            addCriterion("autoid not between", value1, value2, "autoid");
            return (Criteria) this;
        }

        public Criteria andWordidIsNull() {
            addCriterion("wordid is null");
            return (Criteria) this;
        }

        public Criteria andWordidIsNotNull() {
            addCriterion("wordid is not null");
            return (Criteria) this;
        }

        public Criteria andWordidEqualTo(Integer value) {
            addCriterion("wordid =", value, "wordid");
            return (Criteria) this;
        }

        public Criteria andWordidNotEqualTo(Integer value) {
            addCriterion("wordid <>", value, "wordid");
            return (Criteria) this;
        }

        public Criteria andWordidGreaterThan(Integer value) {
            addCriterion("wordid >", value, "wordid");
            return (Criteria) this;
        }

        public Criteria andWordidGreaterThanOrEqualTo(Integer value) {
            addCriterion("wordid >=", value, "wordid");
            return (Criteria) this;
        }

        public Criteria andWordidLessThan(Integer value) {
            addCriterion("wordid <", value, "wordid");
            return (Criteria) this;
        }

        public Criteria andWordidLessThanOrEqualTo(Integer value) {
            addCriterion("wordid <=", value, "wordid");
            return (Criteria) this;
        }

        public Criteria andWordidIn(List<Integer> values) {
            addCriterion("wordid in", values, "wordid");
            return (Criteria) this;
        }

        public Criteria andWordidNotIn(List<Integer> values) {
            addCriterion("wordid not in", values, "wordid");
            return (Criteria) this;
        }

        public Criteria andWordidBetween(Integer value1, Integer value2) {
            addCriterion("wordid between", value1, value2, "wordid");
            return (Criteria) this;
        }

        public Criteria andWordidNotBetween(Integer value1, Integer value2) {
            addCriterion("wordid not between", value1, value2, "wordid");
            return (Criteria) this;
        }

        public Criteria andRelatewordidIsNull() {
            addCriterion("relatewordid is null");
            return (Criteria) this;
        }

        public Criteria andRelatewordidIsNotNull() {
            addCriterion("relatewordid is not null");
            return (Criteria) this;
        }

        public Criteria andRelatewordidEqualTo(Integer value) {
            addCriterion("relatewordid =", value, "relatewordid");
            return (Criteria) this;
        }

        public Criteria andRelatewordidNotEqualTo(Integer value) {
            addCriterion("relatewordid <>", value, "relatewordid");
            return (Criteria) this;
        }

        public Criteria andRelatewordidGreaterThan(Integer value) {
            addCriterion("relatewordid >", value, "relatewordid");
            return (Criteria) this;
        }

        public Criteria andRelatewordidGreaterThanOrEqualTo(Integer value) {
            addCriterion("relatewordid >=", value, "relatewordid");
            return (Criteria) this;
        }

        public Criteria andRelatewordidLessThan(Integer value) {
            addCriterion("relatewordid <", value, "relatewordid");
            return (Criteria) this;
        }

        public Criteria andRelatewordidLessThanOrEqualTo(Integer value) {
            addCriterion("relatewordid <=", value, "relatewordid");
            return (Criteria) this;
        }

        public Criteria andRelatewordidIn(List<Integer> values) {
            addCriterion("relatewordid in", values, "relatewordid");
            return (Criteria) this;
        }

        public Criteria andRelatewordidNotIn(List<Integer> values) {
            addCriterion("relatewordid not in", values, "relatewordid");
            return (Criteria) this;
        }

        public Criteria andRelatewordidBetween(Integer value1, Integer value2) {
            addCriterion("relatewordid between", value1, value2, "relatewordid");
            return (Criteria) this;
        }

        public Criteria andRelatewordidNotBetween(Integer value1, Integer value2) {
            addCriterion("relatewordid not between", value1, value2, "relatewordid");
            return (Criteria) this;
        }

        public Criteria andRelatetypeIsNull() {
            addCriterion("relatetype is null");
            return (Criteria) this;
        }

        public Criteria andRelatetypeIsNotNull() {
            addCriterion("relatetype is not null");
            return (Criteria) this;
        }

        public Criteria andRelatetypeEqualTo(Integer value) {
            addCriterion("relatetype =", value, "relatetype");
            return (Criteria) this;
        }

        public Criteria andRelatetypeNotEqualTo(Integer value) {
            addCriterion("relatetype <>", value, "relatetype");
            return (Criteria) this;
        }

        public Criteria andRelatetypeGreaterThan(Integer value) {
            addCriterion("relatetype >", value, "relatetype");
            return (Criteria) this;
        }

        public Criteria andRelatetypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("relatetype >=", value, "relatetype");
            return (Criteria) this;
        }

        public Criteria andRelatetypeLessThan(Integer value) {
            addCriterion("relatetype <", value, "relatetype");
            return (Criteria) this;
        }

        public Criteria andRelatetypeLessThanOrEqualTo(Integer value) {
            addCriterion("relatetype <=", value, "relatetype");
            return (Criteria) this;
        }

        public Criteria andRelatetypeIn(List<Integer> values) {
            addCriterion("relatetype in", values, "relatetype");
            return (Criteria) this;
        }

        public Criteria andRelatetypeNotIn(List<Integer> values) {
            addCriterion("relatetype not in", values, "relatetype");
            return (Criteria) this;
        }

        public Criteria andRelatetypeBetween(Integer value1, Integer value2) {
            addCriterion("relatetype between", value1, value2, "relatetype");
            return (Criteria) this;
        }

        public Criteria andRelatetypeNotBetween(Integer value1, Integer value2) {
            addCriterion("relatetype not between", value1, value2, "relatetype");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wordrelation
     *
     * @mbggenerated do_not_delete_during_merge Fri Apr 15 13:54:12 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wordrelation
     *
     * @mbggenerated Fri Apr 15 13:54:12 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}